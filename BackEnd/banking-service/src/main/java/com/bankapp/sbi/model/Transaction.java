package com.bankapp.sbi.model;

import java.time.LocalDateTime;
import jakarta.persistence.*;
import lombok.*;

// Mark this class as a JPA entity, representing the "transactions" table in the database
@Entity
@Table(name = "transactions")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class Transaction {

	// Unique ID for each transaction, auto-generated by the database
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	// Enum to represent the type of transaction (Deposit, Withdrawal, Transfer,
	// Received)
	// The @Enumerated(EnumType.STRING) ensures the enum is stored as a string in
	// the database
	@Enumerated(EnumType.STRING)
	@Column(length = 10, nullable = false) // Set column length and ensure it's non-nullable
	private TransactionType type;

	// The amount involved in the transaction (Deposit/Withdrawal/Transfer)
	@Column(nullable = false) // Ensure amount is always present in the transaction
	private Double amount;

	// Timestamp when the transaction is created. The default value is set to the
	// current timestamp.
	// The TIMESTAMP column type is used for proper time storage
	@Column(nullable = false, columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP")
	private LocalDateTime timestamp = LocalDateTime.now();

	// Relationship to the Account entity representing the source of the transaction
	@ManyToOne
	@JoinColumn(name = "account_id", nullable = false) // Account is mandatory for every transaction
	private Account account;

	// Relationship to the toAccount entity, representing the recipient in case of
	// transfers
	// The toAccount can be null for other types of transactions like deposit or
	// withdrawal
	@ManyToOne
	@JoinColumn(name = "to_account_id", nullable = true) // Allow nulls for non-transfer transactions
	private Account toAccount;

	// Enum to define the different types of transactions: Deposit, Withdraw,
	// Transfer, and Received
	public enum TransactionType {
		DEPOSIT, // A deposit transaction into an account
		WITHDRAW, // A withdrawal transaction from an account
		TRANSFER, // A transfer between two accounts
		RECEIVED // A received transaction (typically for incoming transfers or credits)
	}
}
